
// List에 담겨있는 값을 String으로 나열

String prdStr = "";

		for (int i = 0; i < prdList.size(); i++)
		{
			prdStr += prdList.get(i).getPk();
			if (i < prdList.size() - 1)
			{
				prdStr += ",";
			}
		}

/** 
 * 첫번째시도: ProductModel을 String으로 변환해서 쿼리문에 넣었더니 Error 발생
 * So, 쿼리문 append 할 때, List 속성 하나하나 꺼내서 바로 append 되도록 수정
 * 하지만 에러 발생
 **/
		
private String assembleUpdateMgGoupNotIncludeMgSaleLimitQty(final List<ProductModel> prdList)
	{
		preparegMgGroupSaleLimitColumns();
		final StringBuilder query = new StringBuilder();
		query.append("UPDATE " + this.mgGroupSaleLimitColumns.tableName);
		// (...중략...)
		query.append(" WHERE " + this.mgGroupSaleLimitColumns.mgGroupCodeCol + " =?");
		
		if (CollectionUtils.isNotEmpty(prdList))
		{
			query.append(" AND " + this.mgGroupSaleLimitColumns.product + " IN (");
			for (int i = 0; i < prdList.size(); i++)
			{
				query.append(prdList.get(i));
				if (i < prdList.size() - 1)
				{
					query.append(", ");
				}
			}
			query.append(")");
		}
		return query.toString();
	}
	
	/**
	 * 두번째시도: 쿼리를 변경 (UPDATE문의 WHERE절에 SELECT문 서브쿼리로 추가해서, 여러 데이터를 한번에 업데이트
	 * ENUMERATIONVALUES 값이 좀 많아서 성능 저하 걱정했지만, 전혀 문제 될 것이 없었다.
	 **/
	 UPDATE MGGROUPSALELIMIT M
		SET  M.REMAINQUANTITY = '3'
		, M.LIMITQUANTITY = '3'
		, M.ACCUMULATEDQUANTITY ='0'
		where M.PK IN ( select s.PK
			    from MGGROUPSALELIMIT s
			    JOIN products p on s.p_product = p.pk
			    JOIN ENUMERATIONVALUES e on s.MGGROUPCODE = e.pk
			    where e.code ='01'
			    and p.p_skuno ='666010000003'
		);
